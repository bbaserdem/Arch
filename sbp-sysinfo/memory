#!/bin/dash
# vim:ft=sh
# Print ram usage information

# Kill all descendents on exit
trap 'exit' INT TERM
trap 'kill 0' EXIT

# Default color
if [ -z "${SBP_MEM_COLOR}" ] ; then
  SBP_MEM_COLOR='orange'
fi
# Polling interval
if [ -z "${SBP_MEM_POLL}" ] ; then
  SBP_MEM_POLL=10
fi

# Click commands that can be overriden through environment vars
get_actions () {
# Function to generate action list
  # Left click
  if [ -z "${SBP_MEM_LEFTCLICK}" ] ; then
    _left='true'
  else
    _left="${SBP_MEM_LEFTCLICK}"
  fi
  # Right click
  if [ -z "${SBP_MEM_RIGHTCLICK}" ] ; then
    _right="true"
  else
    _right="${SBP_MEM_RIGHTCLICK}"
  fi
  # Middle click
  if [ -z "${SBP_MEM_MIDDLECLICK}" ] ; then
    _middle="${TERMINAL} htop"
  else
    _middle="${SBP_MEM_MIDDLECLICK}"
  fi
  # Scroll up
  if [ -z "${SBP_MEM_SCROLLUP}" ] ; then
    _up='true'
  else
    _up="${SBP_MEM_SCROLLUP}"
  fi
  # Scroll down
  if [ -z "${SBP_MEM_SCROLLDOWN}" ] ; then
    _down='true'
  else
    _down="${SBP_MEM_SCROLLDOWN}"
  fi
  # Print json
  _jsonact="{\"middle\":\"${_middle}\""
  _jsonact="${_jsonact},\"left\":\"${_left}\",\"right\":\"${_right}\""
  echo "${_jsonact},\"up\":\"${_up}\",\"down\":\"${_down}\"}"
}

get_text () {
# Parse json text that has the fields; o
# * accent: Accent color (not neccessary needed)
# * prompt: Text to display
# * prefix: Icon to display at beginning
# * suffix: Icon to display at end
# * tooltip: Expanded tooltip; maybe for future
# * dim: (Boolean) To dim module or not.
  # Get memory info (raw and human readable
  _iraw="$(free -m)"
  _info="$(free -h)"
  # Format tooltip
  _tip="$(echo "${_info}" | tr '\n' '~' | sed 's|~|\\\\n|g')"
  # Get RAM usage
  _m_perc="$(echo "${_iraw}" | awk '/Mem:/ {printf("%.0f", $3 / $2 * 100.0);}')"
  _m_amnt="$(echo "${_info}" | awk '/Mem:/ {print $3}')"
  # Get SWAP usage
  _s_perc="$(echo "${_iraw}" | awk '/Swap:/ {printf("%.0f", $3 / $2 * 100.0);}')"
  _s_amnt="$(echo "${_info}" | awk '/Swap:/ {print $3}')"
  # Include swap if it's high
  _txt="${_m_amnt} (${_m_perc})"
  if [ "${_s_perc}" -gt 0 ] ; then
    _txt="${_txt} 樂 ${_s_amnt} (${_s_perc})"
    _suf=' 易'
  else
    _suf=''
  fi
  # Print JSON
  _json="{\"prompt\":\"${_txt}\",\"accent\":\"${SBP_MEM_COLOR}\""
  _json="${_json},\"prefix\":\" \",,\"suffix\":\"${_suf}\"\"dim\":false"
  echo "${_json},\"tooltip\":\"${_tip}\"}"
}

polling_loop() {
# Poll the time every some seconds
  while : ; do
    sleep "${SBP_MEM_POLL}" || exit 1
    get_text || exit 2
  done
}

# Main function
case $1 in
  actions) get_actions ;;
  once) get_text ;;
  *) get_text ; polling_loop ;;
esac
