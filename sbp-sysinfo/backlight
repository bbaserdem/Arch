#!/bin/dash
# Print screen and keyboard brightness levels
# Depends on: pactl, pamixer, (pavucontrol}

# Kill all descendents on exit
trap 'exit' INT TERM
trap 'kill 0' EXIT

# Default color, if not defined
if [ -z "${SBP_BLIT_COLOR}" ] ; then
    SBP_BLIT_COLOR='indigo'
fi

# Click commands that can be overriden through environment vars
get_actions () {
# Function to generate action list
  # Left click
  if [ -z "${SBP_BLIT_LEFTCLICK}" ] ; then
    _left="/usr/bin/light -Ars 'sysfs/leds/${BRI_KBD}' 1"
  else
    _left="${SBP_BLIT_LEFTCLICK}"
  fi
  # Right click
  if [ -z "${SBP_BLIT_RIGHTCLICK}" ] ; then
    _left="/usr/bin/light -Urs 'sysfs/leds/${BRI_KBD}' 1"
  else
    _right="${SBP_BLIT_RIGHTCLICK}"
  fi
  # Middle click
  if [ -z "${SBP_BLIT_MIDDLECLICK}" ] ; then
    _middle="true"
  else
    _middle="${SBP_BLIT_MIDDLECLICK}"
  fi
  # Scroll up
  if [ -z "${SBP_BLIT_SCROLLUP}" ] ; then
    _up='/usr/bin/light -A 1'
  else
    _up="${SBP_BLIT_SCROLLUP}"
  fi
  # Scroll down
  if [ -z "${SBP_BLIT_SCROLLDOWN}" ] ; then
    _down='/usr/bin/light -U 1'
  else
    _down="${SBP_BLIT_SCROLLDOWN}"
  fi
  # Print json
  _jsonact="{\"middle\":\"${_middle}\""
  _jsonact="${_jsonact},\"left\":\"${_left}\",\"right\":\"${_right}\""
  echo "${_jsonact},\"up\":\"${_up}\",\"down\":\"${_down}\"}"
}

get_text () {
# Parse json text that has the fields;
# * accent: Accent color (not neccessary needed)
# * prompt: Text to display
# * prefix: Icon to display at beginning
# * suffix: Icon to display at end
# * tooltip: Expanded tooltip; maybe for future
# * dim: (Boolean) To dim module or not.
  # Get screen brightness
  _val="$(/usr/bin/light -Gs 'sysfs/backlight/auto' | awk '{printf "%.0f", $1}')"
  if [ -z "${_val}" ] ; then
    exit 1
  fi
  # Determine the screen icon icon
  if [ "${_val}" -ge 75 ] ; then
    _pre=""
  elif [ "${_val}" -ge 50 ] ; then
    _pre=""
  elif [ "${_val}" -ge 25 ] ; then
    _pre=""
  else
    _pre=""
  fi
  # Check if keyboard light is on
  _kbv="$(/usr/bin/light -Grs "${BRI_KBD}")"
  # Determine the icon for keyboard brightness
  if [ -z "${_kbv}" ] || [ "${_kbv}" = '0' ] ; then
    _suf=""
  else
    _ico=" "
  fi
  # Print JSON string
  _json="{\"prompt\":\"${_val}\""
  _json="${_json},\"prefix\":\"${_pre}\""
  _json="${_json},\"suffix\":\"${_suf}\""
  _json="${_json},\"dim\":false"
  _json="${_json},\"accent\":\"${SBP_BLIT_COLOR}\""
  echo "${_json},\"tooltip\":\"${_tip}\"}"
}

# Listener loop
listener_loop () {
  /usr/bin/acpi_listen | while read -r _line ; do
    if echo "${_line}" | grep --quiet --ignore-case 'brightness' ; then
      get_text
    fi
  done
}

# Main function
case $1 in
  actions) get_actions ;;
  once) get_text ;;
  *) get_text ; listener_loop ;;
esac
