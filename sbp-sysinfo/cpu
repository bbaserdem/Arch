#!/bin/dash
# vim:ft=sh
# Print cpu usage information

# Kill all descendents on exit
trap 'exit' INT TERM
trap 'kill 0' EXIT

# Default color
if [ -z "${SBP_CPU_COLOR}" ] ; then
  SBP_CPU_COLOR='yellow'
fi
# Polling interval
if [ -z "${SBP_CPU_POLL}" ] ; then
  SBP_CPU_POLL=60
fi

# Click commands that can be overriden through environment vars
get_actions () {
# Function to generate action list
  # Left click
  if [ -z "${SBP_CPU_LEFTCLICK}" ] ; then
    _left='true'
  else
    _left="${SBP_CPU_LEFTCLICK}"
  fi
  # Right click
  if [ -z "${SBP_CPU_RIGHTCLICK}" ] ; then
    _right="true"
  else
    _right="${SBP_CPU_RIGHTCLICK}"
  fi
  # Middle click
  if [ -z "${SBP_CPU_MIDDLECLICK}" ] ; then
    _middle="${TERMINAL} htop"
  else
    _middle="${SBP_CPU_MIDDLECLICK}"
  fi
  # Scroll up
  if [ -z "${SBP_CPU_SCROLLUP}" ] ; then
    _up='true'
  else
    _up="${SBP_CPU_SCROLLUP}"
  fi
  # Scroll down
  if [ -z "${SBP_CPU_SCROLLDOWN}" ] ; then
    _down='true'
  else
    _down="${SBP_CPU_SCROLLDOWN}"
  fi
  # Print json
  _jsonact="{\"middle\":\"${_middle}\""
  _jsonact="${_jsonact},\"left\":\"${_left}\",\"right\":\"${_right}\""
  echo "${_jsonact},\"up\":\"${_up}\",\"down\":\"${_down}\"}"
}

get_text() {
# Parse json text that has the fields;
# * accent: Accent color (not neccessary needed)
# * prompt: Text to display
# * prefix: Icon to display at beginning
# * suffix: Icon to display at end
# * tooltip: Expanded tooltip; maybe for future
# * dim: (Boolean) To dim module or not.
  # Get data from /proc/loadavg
  _data="$(cat /proc/loadavg)"
  # Get average load for last minute
  _avg="$(echo "${_data}" | awk '{printf("%.1f",$1)}')"
  # Write tooltip;
  _tip="$(echo "${_data}" | awk '{printf("Avg. load ( 1 min): %.2f", $1)}')"
  _tip="${_tip}"'\\n'"$(echo "${_data}" | awk '{printf("Avg. load ( 5 min): %.2f", $2)}')"
  _tip="${_tip}"'\\n'"$(echo "${_data}" | awk '{printf("Avg. load (10 min): %.2f", $3)}')"
  _tip="${_tip}"'\\n'"$(echo "${_data}" | awk '{printf("Running processes: %s", $4)}')"
  # Print JSON string
  _json="{\"prompt\":\"${_avg}\",\"accent\":\"${SBP_CPU_COLOR}\""
  _json="${_json},\"prefix\":\" \",\"suffix\":\"\",\"dim\":false"
  echo "${_json},\"tooltip\":\"${_tip}\"}"
}

polling_loop() {
# Poll the time every some seconds
  while : ; do
    sleep "${SBP_CPU_POLL}" || exit 1
    get_text || exit 2
  done
}

# Main function
case $1 in
  actions) get_actions ;;
  once) get_text ;;
  *) get_text ; polling_loop ;;
esac
